if (i<10){
counter = paste("00",i,sep="")
print(counter)
}
else if (i>=10 & i<100){
counter = paste("0",i,sep="")
print(counter)
}
else if (i>=100){
counter = as.character(i)
print(counter)
}
x = read.csv(paste(directory,"/",counter,".csv",sep=""))
if(i==min(id)){
mydata=x[0,]
}
mydata = rbind(mydata,x)
}
z = mean(mydata[,pollutant],na.rm=T)
return(z)
}
pollutantmean(directory = "C:/Users/harric17/Desktop/R Stuff/coursera/rprog/proj1/specdata", pollutant = "sulfate")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector
makeVector()
makeVector(1)
makeVector(333)
makeVector(x=333)
B = matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2)
B
solve(B)
B = matrix(c(2, 4, 3, 1), nrow=2, ncol=2)
solve(B)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(x=c(333,22))
makeVector(x=c(333,22))
makeVector(x=222)
makeVector(x=c(333,22))
x=c(333,22)
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
cachemean()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(x)
makeVector(x=c(333,22))
cachemean(x)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(solve) m <<- solve
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(solve) m <<- solve
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
library(shiny)
runExample("01_hello")
library(shiny)
hist(c(74,83,60,77,85,91,85,90,66,73,67))
hist(c(92,100,95,100,81,85,98,93,96,79,100))
hist(c(74,83,60,77,85,91,85,90,66,73,67))
hist(c(92,100,95,100,81,85,98,93,96,79,100),freq=F)
hist(c(92,100,95,100,81,85,98,93,96,79,100),freq=T)
hist(c(92,100,95,100,81,85,98,93,96,79,100),freq=F)
hist(c(92,100,95,100,81,85,98,93,96,79,100),freq=F)
hist(c(74,83,60,77,85,91,85,90,66,73,67),freq=F)
library(lattice)
histogram(c(92,100,95,100,81,85,98,93,96,79,100))
hist(c(92,100,95,100,81,85,98,93,96,79,100))
histogram(c(92,100,95,100,81,85,98,93,96,79,100))
hist(c(92,100,95,100,81,85,98,93,96,79,100))
histogram(c(92,100,95,100,81,85,98,93,96,79,100),type="count")
histogram(c(92,100,95,100,81,85,98,93,96,79,100),type="percent")
histogram(c(92,100,95,100,81,85,98,93,96,79,100),type="count")
hist(c(74,83,60,77,85,91,85,90,66,73,67),freq=F)
hist(c(74,83,60,77,85,91,85,90,66,73,67))
histogram(c(12, 11, 1, 12, 10, 9, 8, 8, 7))
library(lattice)
histogram(c(12, 11, 1, 12, 10, 9, 8, 8, 7))
histogram(c(12, 11, 1, 12, 10, 9, 8, 8, 7))
mean(c(12, 11, 1, 12, 10, 9, 8, 8, 7))
mean(c(12, 11, 12, 10, 9, 8, 8, 7))
mean(c(12, 11, 13, 1, 12, 10, 9, 8, 8, 7))
mean(c(12, 11, 13,  12, 10, 9, 8, 8, 7))
histogram(c(12, 11, 13, 1, 12, 10, 9, 8, 8, 7))
hist(c(12, 11, 13, 1, 12, 10, 9, 8, 8, 7))
plot(c(12, 11, 13, 1, 12, 10, 9, 8, 8, 7))
20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5)
c(20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5)
histogram(c(20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5))
histogram(c(20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5),type="count")
histogram(c(20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5),type="count",breaks=5)
histogram(c(20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5),breaks=5)
histogram(c(20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5),type="count",breaks=5)
histogram(c(20.8,17,11,6.3,6,5,4.5,4,4,.9,.9,.5,.5),breaks=5)
hist(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10))
histogram(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=2)
histogram(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=5)
histogram(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=6)
histogram(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=7)
histogram(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=c(2,4,6,8,10,12,14,16))
his(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10))
hist(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10))
hist(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=2)
hist(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=5)
hist(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=10)
hist(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=11)
hist(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10),breaks=10)
mean(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10))
mean(c(15, 14, 16, 15, 13, 12, 11, 11, 10))
plot(c(15, 14, 16, 1, 15, 13, 12, 11, 11, 10))
c(10,17,11,4,12)
hist(c(10,17,11,4,12))
hist(c(10,17,11,4,12),breaks=5)
hist(c(26,24,50,0,28,36,39,34,25,33),breaks=5)
hist(c(26,24,50,0,28,36,39,34,25,33))
hist(c(26,24,50,0,28,36,39,34,25,33))
hist(c(26,24,50,0,28,36,39,34,25,33),breaks=8)
hist(c(26,24,50,0,28,36,39,34,25,33),breaks=7)
hist(c(26,24,50,0,28,36,39,34,25,33),breaks=5)
hist(c(26,24,50,0,28,36,39,34,25,33),breaks=3)
hist(c(26,24,50,0,28,36,39,34,25,33),breaks=4)
plot(c(26,24,50,0,28,36,39,34,25,33))
hist(c(1,8,1))
hist(c(1,2,2,2,2,2,2,2,2,1))
hist(c(1,2,2,2,2,2,2,2,2,3))
hist(c(1,2,2,2,2,2,2,2,2,3),breaks=3)
hist(c(1,2,2,2,2,2,2,2,2,3),breaks=2)
hist(c(1,2,2,2,2,2,2,2,2,3),breaks=3)
library(lattice)
histogram(c(1,2,2,2,2,2,2,2,2,3),breaks=3)
histogram(c(1,2,2,2,2,2,2,2,2,3))
histogram(c(1,2,2,2,2,2,2,2,2,3),type="count")
histogram(c(1,2,2,2,2,2,2,2,2,3),type="freq")
histogram(c(1,2,2,2,2,2,2,2,2,3),type="percent")
hist(c(1,2,2,2,2,2,2,2,2,3),type="percent")
hist(c(1,2,2,2,2,2,2,2,2,2.5),type="percent")
hist(c(1,2,2,2,2,2,2,2,2,2.5),type="percent")
hist(c(1,2,2,2,2,2,2,2,2,2.5))
hist(c(1,2,2,2,2,2,2,2,2,2.5))
hist(c(1,2,2,2,2,2,2,2,2,2.5),freq=T)
hist(c(1,2,2,2,2,2,2,2,2,2.5),freq=F)
histogram(c(1,2,2,2,2,2,2,2,2,2.5),type="percent")
histogram(c(1.5,2,2,2,2,2,2,2,2,2.5),type="percent")
histogram(c(1.5,2,2,2,2,2,2,2,2,2.1),type="percent")
histogram(c(1.5,2,2,2,2,2,2,2,2,2.2),type="percent")
histogram(c(1.8,2,2,2,2,2,2,2,2,2.2),type="percent")
histogram(c(1.8,2,2,2,2,2,2,2,2,2.2),type="percent",breaks=2)
histogram(c(1.8,2,2,2,2,2,2,2,2,2.2),type="percent",breaks=3)
rand(0,1)
rand(1)
runif(100)
runif(5000)
hist(runif(5000))
library(lattice)
histogram(runif(5000),type="freq")
histogram(runif(5000),type="percent")
histogram(runif(500000),type="percent")
histogram(runif(500000000),type="percent")
histogram(runif(50000000),type="percent")
histogram(runif(5000000),type="percent")
rnorm(10)
rnorm(10)+1
rnorm(10,60,1)
rnorm(10,60,1)
plot(rnorm(10,60,1))
hist(rnorm(10,60,1))
hist(1,2,2,2,3,3,3,3,3,3,4,4,4,5)
hist(c(1,2,2,2,3,3,3,3,3,3,4,4,4,5))
summary(c(1,2,2,2,3,3,3,3,3,3,4,4,4,5))
sd(c(1,2,2,2,3,3,3,3,3,3,4,4,4,5))
runif(0,1)
runif(1.0,1)
x = c(3,10,11,12,7,6,15,11,12,14,5,8)
y = c(65,89,88,91,84,80,97,87,93,100,73.80)
z =data.frame(x,y)
nrow(x)
dim(x)
length(x)
x = c(3,10,11,12,7,6,15,11,12,14,5,8)
length(x)
y = c(65,89,88,91,84,80,97,87,93,100,73,80)
length(y)
z =data.frame(x,y)
z
a = lm(y~x)
a
x = c(3,10,11,12,7,6,15,11,12,14,5,8,1,3)
length(x)
y = c(65,89,88,91,84,80,97,87,93,100,73,80,50,60)
length(y)
z =data.frame(x,y)
a = lm(y~x)
a
summary(a)
x = c(3,10,11,12,7,6,15,11,12,14,5,8,1,3,10)
length(x)
y = c(65,89,88,91,84,80,97,87,93,100,73,80,50,60,95)
length(y)
z =data.frame(x,y)
a = lm(y~x)
summary(a)
w = c(66,64,66,65,70,65)
m = c(72,68,70,68,71,65)
corr(w,m)
library(stats)
corr(w,m)
cor(w,m)
m2 = m-6
cor(w,m2)
w2 = w+3
cor(w,w2)
install.packages("installr")
if(!require(installr)) {
install.packages("installr"); require(installr)}
reqR <- fromJSON(contenttext)
library(httr)
library(XML)
reqR <- fromJSON(contenttext)
library(jsonlite)
reqR <- fromJSON(contenttext)
myapp = oauth_app("github","b384031e8770e491c69f","ed6ca84fbba43a5eee9ccc44045204e814186454")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp = oauth_app("github","b384031e8770e491c69f","ed6ca84fbba43a5eee9ccc44045204e814186454")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
contenttext <- content(req,"text")
reqR <- fromJSON(contenttext)
reqR
head(reqR)
names(reqR)
unqique(reqR$name)
unique(reqR$name)
reqR[reqR$name=="datasharing",]
names(reqR)
reqR[reqR$name=="datasharing","created_at"]
gbinom(20, 0.3)
rbinom(20,.3)
rbinom(10, 10, .5)
rbinom(10, 15, .5)
plot(rbinom(10, 1000, .5))
plot(rbinom(10, 1000, .5))
plot(rbinom(10, 10, .5))
plot(rbinom(100000, 10, .5))
setwd("C:/Users/harric17/Desktop/gacd")
setwd("C:/Users/harric17/Desktop/gacd/project/")
### read in train and test files
### combine with Y and user files
train = read.table("../project/UCI HAR Dataset/train/X_train.txt")
trainy = read.table("../project/UCI HAR Dataset/train/y_train.txt")
trainu = read.table("../project/UCI HAR Dataset/train/subject_train.txt")
names(trainy)="Y"
names(trainu)="user"
train2 = cbind(trainu,trainy,train)
names(train2)[1:10]
dim(train2)
train2[1:10,1:10]
test = read.table("../project/UCI HAR Dataset/test/X_test.txt")
testy = read.table("../project/UCI HAR Dataset/test/y_test.txt")
testu = read.table("../project/UCI HAR Dataset/test/subject_test.txt")
names(testy)="Y"
names(testu)="user"
test2 = cbind(testu,testy,test)
names(test2)[1:10]
dim(test2)
test2[1:10,1:10]
### combine test and train files
test3 = rbind(test2,train2)
dim(test3)
### get means and sds
names(test3)
x = names(test3)[-1]
x
test3$Y
class(test3$Y)
length(x)
y = rep(0,length(x))
y
x[1]
mysd = rep(0,length(x))
for (i in 1:length(x)){
mymean[i] = mean(test3[,x[i]])
mysd[i] = mean(test3[,x[i]])
}
mymean = rep(0,length(x))
for (i in 1:length(x)){
mymean[i] = mean(test3[,x[i]])
mysd[i] = mean(test3[,x[i]])
}
mysd
mydf = as.data.frame(x,mymean,mysd)
mydf = as.Dataframe(x,mymean,mysd)
mymean
as.numeric(mymean)
mydf = as.data.frame(x,as.numeric(mymean),as.numeric(mysd)
)
mydf = as.data.frame(x=x,y=as.numeric(mymean),z=as.numeric(mysd))
mydf
mydf = as.data.frame(x=x,y=mymean,z=mysd)
head(mydf)
mydf = cbind(x=x,y=mymean,z=mysd)
head(mydf)
mydf = as.data.frame(cbind(x=x,y=mymean,z=mysd))
head(mydf)
class(mydf$y)
mydf = as.data.frame(cbind(Var=x,Mean=mymean,SD=mysd))
head(mydf)
class(mydf$Mean)
mydf = as.data.frame(cbind(Var=x,Mean=as.numeric(as.character(mymean)),SD=mysd))
class(mydf$Mean)
mydf$Mean = as.numeric(as.character(mydf$Mean))
mydf$SD = as.numeric(as.character(mydf$SD))
class(mydf$SD)
mydf$SD
head(test3)
head(test3[,1])
table(test3$Y)
names(test3)
table(test3$user)
mydf
mysd[i] = stdev(test3[,x[i]])
mysd[i] = sd(test3[,x[i]])
x = names(test3)[-1]
mymean = rep(0,length(x))
mysd = rep(0,length(x))
for (i in 1:length(x)){
mymean[i] = mean(test[,x[i]])
mysd[i] = sd(test3[,x[i]])
}
mymean = rep(0,length(x))
mysd = rep(0,length(x))
x = names(test3)[-1]
x
for (i in 1:length(x)){
mymean[i] = mean(test[,x[i]])
mysd[i] = sd(test3[,x[i]])
}
mymean[i] = mean(test[,x[i]])
for (i in 1:length(x)){
mymean[i] = mean(test3[,x[i]])
mysd[i] = sd(test3[,x[i]])
}
class(mydf$SD)
mydf = as.data.frame(cbind(Var=x,Mean=mymean,SD=mysd))
class(mydf$SD)
mydf$Mean = as.numeric(as.character(mydf$Mean))
mydf$SD = as.numeric(as.character(mydf$SD))
mydf
length(x)
aggdata = aggregate(test3,by=list(users))
aggdata = aggregate(test3,by=list(user))
aggdata = aggregate(test3,by=list(user),fun=mean)
aggdata = aggregate(test3,by=list(user),FUN=mean)
aggdata = aggregate(test3,by=list(users),FUN=mean)
names(test3)
aggdata = aggregate(test3,by=list(user),FUN=mean)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
aggdata
mtcars
aggdata = aggregate(test3,by=list(test3$user),FUN=mean)
aggdata
dim(aggdata)
vars = read.table("../project/UCI HAR Dataset/features.txt")
vars
vars[2]
vars=vars[2]
vars
names(test3)
names(test3)[3:length(names(test3))]
names(test3)[3:length(names(test3))]=vars
names(test3)
vars=vars[2]
vars = read.table("../project/UCI HAR Dataset/features.txt")
vars=vars[2]
vars=as.vector(vars[2])
vars = read.table("../project/UCI HAR Dataset/features.txt")
vars2=as.vector(vars[2])
vars2
class(names(test3))
class(vars2)
vars2=as.character(vars[2])
class(vars2)
vars2
vars = read.table("../project/UCI HAR Dataset/features.txt")
vars[2]
class(vars[2])
as.character(vars[2])
names(vars)
vars$V1
vars$V2
class(vars$V2)
as.character(vars$V2)
vars2=as.character(vars$V2)
vars2
names(test3)[3:length(names(test3))]=vars2
names(test3)
names(test3)[2] = "Outcome"
names(test3)
x = names(test3)[-1]
mymean = rep(0,length(x))
mysd = rep(0,length(x))
for (i in 1:length(x)){
mymean[i] = mean(test3[,x[i]])
mysd[i] = sd(test3[,x[i]])
}
mydf = as.data.frame(cbind(Var=x,Mean=mymean,SD=mysd))
mydf$Mean = as.numeric(as.character(mydf$Mean))
mydf$SD = as.numeric(as.character(mydf$SD))
mydf
aggdata = aggregate(test3,by=list(test3$user),FUN=mean)
dim(aggdata)
aggdata
names(test3)[2] = "activity"
aggdata = aggregate(test3,by=list(test3$user,test3$activity),FUN=mean)
dim(aggdata)
aggdata[1:10,1:3]
aggdata[1:10,1:10]
aggdata[1:10,1:6]
write.table(aggdata,file = "../project/project.txt", row.name=FALSE)
dim(aggdata)
aggdata$Group.1=NULL
aggdata$Group.2=NULL
dim(aggdata)
aggdata[1:10,1:6]
write.table(aggdata,file = "../project/project.txt", row.name=FALSE)
